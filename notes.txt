TODO:

- add installing main project
- test local builds
- check what's with the deprecated? run_add_pkgs
- add diagnostic features, env.txt, packages_resolved
- start using this for local builds in jenkins
- add preset handling
- rewrite with per-config install build options
- determining deps configs if they have no override? what if main project is NoConfig? When 

add_pkg:
- clone + build + install here in the build directory, as it is (not cached)
- clone + build + install here in the build directory in a cache, return install dir or compressed archive
- clone + build + install here in another build directory in a cache, return install dir or compressed archive
- download from remote server, return install dir or compressed archive

add_pkg:

PACKAGE_SOURCE_POLICY = local_build | force_server_build | server_build | try_server_build

    switch(PACKAGE_SOURCE_POLICY)
        case force_server_build:
        case server_build:
        case try_server_build:
            server_has_it = ask_server()
            if(!server_has_it && PACKAGE_SOURCE_POLICY == server_build || PACKAGE_SOURCE_POLICY == force_server_build)
                server_has_it = build_on_server()
            if(server_has_it)
                download && return path
            else            
                CHECK(PACKAGE_SOURCE_POLICY != force_server_build)
                build_here_to_cache()
                return path
        case local_build:
            build_locally() && return path


what should happen at an add_pkg (add_dep?) command

cmakex [t][d][r][w] -B <binary-dir>
    --add-pkg "ZLIB GIT_URL https://scm.adasworks.com/r/thirdparty/src/zlib CMAKE_ARGS -DBUILD_SHARED_LIBS=0"
    config_pars (no install_prefix)
    -- native_pars

cmakex pkg --add "ZLIB;..." -GXcode --config drw
cmakex pkg --remove 

cmakex -H <build-script> -B binary_dir config_pars [configs] --target TS -- native_pars
add_pkg:
    clone

    --package
    cmakex
        -H clone_dir/SOURCE_DIR
        -B pkg_binary_dir(binary_dir, pkg_name)
        all the config pars
        all the configs or CONFIGS specified for the pkg
        install target
        test target if specified
        -- native_pars
        install_prefix = pkg_install_prefix(binary_dir, pkg_name)


deps_install_prefix = deps/o
deps_binary_dir = deps/b
deps_clone_dir = deps/c
package_registry = url or urls



cmakex: Cloning package 'aw-sx' @HEAD
$ git --recurse https://scm.adasworks.com/r/frameworks/adasworks-std-extras /Users/tamas.kenez/git/cmakex/test-b/_deps/aw-sx
-- Using git: /opt/local/bin/git.
$ git clone --recurse https://scm.adasworks.com/r/frameworks/adasworks-std-extras /Users/tamas.kenez/git/cmakex/test-b/_deps/aw-sx
-- Cloning into '/Users/tamas.kenez/git/cmakex/test-b/_deps/aw-sx'...
remote: Counting objects: 697, done
remote: Finding sources: 100% (697/697)
remote: Getting sizes: 100% (278/278)
remote: Compressing objects: 100% (134659/134659)
remote: Total 697 (delta 327), reused 652 (delta 316)
Receiving objects: 100% (697/697), 162.95 KiB | 0 bytes/s, done.
Resolving deltas: 100% (338/338), done.
Checking connectivity... done.
-- [aw-sx] No uncommitted changes, checked out @309472384723 

********************
* Building [aw-sx] *
********************
-- Reason: initial build
-- Configuration: Debug
$ cmake -Htest-b/_deps/aw-sx -Btest-b/_deps/aw-sx-build -DBUILD_TESTING=0 -DOPT_BUILD_DOCUMENTATION=0 -DCMAKE_INSTALL_PREFIX=test-b/_deps/aw-sx-install -DCMAKE_PREFIX_PATH=test-b/_deps-install
Configuring for 12:34, Log size: 1234, path: "test-b/_cmakex/log/aw-sx-Debug-configure.log".
$ cmake --build test-b/_deps/aw-sx-build --config Debug
Building for 12:34, log size: 1234, path: "test-b/_cmakex/log/aw-sx-Debug-build.log".
$ cmake --build test-b/_deps/aw-sx-build --config Debug --target install
Installing for 12:34, log size: 1234, path: "test-b/_cmakex/log/aw-sx-Debug-install.log".
